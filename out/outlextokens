[inline_cmt, // ====== Class declarations ====== //, 1]
[class, class, 2]
[id, POLYNOMIAL, 2]
[{, {, 2]
[private, private, 3]
[id, QUADRATIC, 3]
[id, quad, 3]
[;, ;, 3]
[public, public, 4]
[id, evaluate, 4]
[(, (, 4]
[float, float, 4]
[id, x, 4]
[), ), 4]
[:, :, 4]
[float, float, 4]
[;, ;, 4]
[}, }, 5]
[;, ;, 5]
[class, class, 7]
[id, LINEAR, 7]
[inherits, inherits, 7]
[id, POLYNOMIAL, 7]
[{, {, 7]
[private, private, 8]
[float, float, 8]
[id, a, 8]
[;, ;, 8]
[private, private, 9]
[float, float, 9]
[id, b, 9]
[;, ;, 9]
[public, public, 11]
[id, build, 11]
[(, (, 11]
[float, float, 11]
[id, A, 11]
[,, ,, 11]
[float, float, 11]
[id, B, 11]
[), ), 11]
[:, :, 11]
[id, LINEAR, 11]
[;, ;, 11]
[public, public, 12]
[id, evaluate, 12]
[(, (, 12]
[float, float, 12]
[id, x, 12]
[), ), 12]
[:, :, 12]
[float, float, 12]
[;, ;, 12]
[}, }, 13]
[;, ;, 13]
[class, class, 15]
[id, QUADRATIC, 15]
[inherits, inherits, 15]
[id, POLYNOMIAL, 15]
[{, {, 15]
[private, private, 16]
[float, float, 16]
[id, a, 16]
[;, ;, 16]
[private, private, 17]
[float, float, 17]
[id, b, 17]
[;, ;, 17]
[private, private, 18]
[float, float, 18]
[id, c, 18]
[;, ;, 18]
[public, public, 20]
[id, build, 20]
[(, (, 20]
[float, float, 20]
[id, A, 20]
[,, ,, 20]
[float, float, 20]
[id, B, 20]
[,, ,, 20]
[float, float, 20]
[id, C, 20]
[), ), 20]
[:, :, 20]
[id, QUADRATIC, 20]
[;, ;, 20]
[public, public, 21]
[id, evaluate, 21]
[(, (, 21]
[float, float, 21]
[id, x, 21]
[), ), 21]
[:, :, 21]
[float, float, 21]
[;, ;, 21]
[}, }, 22]
[;, ;, 22]
[inline_cmt, // ====== Function Definitions ====== //, 24]
[id, POLYNOMIAL, 25]
[sr, ::, 25]
[id, evaluate, 25]
[(, (, 25]
[float, float, 25]
[id, x, 25]
[), ), 25]
[:, :, 25]
[float, float, 25]
[do, do, 26]
[return, return, 27]
[(, (, 27]
[floatNum, 0.0, 27]
[), ), 27]
[;, ;, 27]
[end, end, 28]
[id, LINEAR, 30]
[sr, ::, 30]
[id, evaluate, 30]
[(, (, 30]
[float, float, 30]
[id, x, 30]
[), ), 30]
[:, :, 30]
[float, float, 30]
[local, local, 31]
[float, float, 32]
[id, result, 32]
[;, ;, 32]
[do, do, 33]
[id, result, 34]
[=, =, 34]
[floatNum, 0.0, 34]
[;, ;, 34]
[id, result, 35]
[=, =, 35]
[id, a, 35]
[*, *, 35]
[id, x, 35]
[+, +, 35]
[id, b, 35]
[;, ;, 35]
[return, return, 36]
[(, (, 36]
[id, result, 36]
[), ), 36]
[;, ;, 36]
[end, end, 37]
[id, QUADRATIC, 39]
[sr, ::, 39]
[id, evaluate, 39]
[(, (, 39]
[float, float, 39]
[id, x, 39]
[), ), 39]
[:, :, 39]
[float, float, 39]
[local, local, 40]
[float, float, 41]
[id, result, 41]
[;, ;, 41]
[do, do, 42]
[inline_cmt, //Using Horner's method, 42]
[id, result, 43]
[=, =, 43]
[id, a, 43]
[;, ;, 43]
[id, result, 44]
[=, =, 44]
[id, result, 44]
[*, *, 44]
[id, x, 44]
[+, +, 44]
[id, b, 44]
[;, ;, 44]
[id, result, 45]
[=, =, 45]
[id, result, 45]
[*, *, 45]
[id, x, 45]
[+, +, 45]
[id, c, 45]
[;, ;, 45]
[return, return, 46]
[(, (, 46]
[id, result, 46]
[), ), 46]
[;, ;, 46]
[end, end, 47]
[id, LINEAR, 49]
[sr, ::, 49]
[id, build, 49]
[(, (, 49]
[float, float, 49]
[id, A, 49]
[,, ,, 49]
[float, float, 49]
[id, B, 49]
[), ), 49]
[:, :, 49]
[id, LINEAR, 49]
[local, local, 50]
[id, LINEAR, 51]
[id, new_function, 51]
[;, ;, 51]
[do, do, 52]
[id, new_function, 53]
[., ., 53]
[id, a, 53]
[=, =, 53]
[id, A, 53]
[;, ;, 53]
[id, new_function, 54]
[., ., 54]
[id, b, 54]
[=, =, 54]
[id, B, 54]
[;, ;, 54]
[return, return, 55]
[(, (, 55]
[id, new_function, 55]
[), ), 55]
[;, ;, 55]
[end, end, 56]
[id, QUADRATIC, 58]
[sr, ::, 58]
[id, build, 58]
[(, (, 58]
[float, float, 58]
[id, A, 58]
[,, ,, 58]
[float, float, 58]
[id, B, 58]
[,, ,, 58]
[float, float, 58]
[id, C, 58]
[), ), 58]
[:, :, 58]
[id, QUADRATIC, 58]
[local, local, 59]
[id, QUADRATIC, 60]
[id, new_function, 60]
[;, ;, 60]
[do, do, 61]
[id, new_function, 62]
[., ., 62]
[id, a, 62]
[=, =, 62]
[id, A, 62]
[;, ;, 62]
[id, new_function, 63]
[., ., 63]
[id, b, 63]
[=, =, 63]
[id, B, 63]
[;, ;, 63]
[id, new_function, 64]
[., ., 64]
[id, c, 64]
[=, =, 64]
[id, C, 64]
[;, ;, 64]
[return, return, 65]
[(, (, 65]
[id, new_function, 65]
[), ), 65]
[;, ;, 65]
[end, end, 66]
[inline_cmt, // ====== main ====== //, 69]
[main, main, 70]
[local, local, 71]
[id, LINEAR, 72]
[id, f1, 72]
[;, ;, 72]
[id, QUADRATIC, 73]
[id, f2, 73]
[;, ;, 73]
[float, float, 74]
[id, counter, 74]
[;, ;, 74]
[do, do, 75]
[id, f1, 76]
[=, =, 76]
[id, f1, 76]
[., ., 76]
[id, build, 76]
[(, (, 76]
[floatNum, 2.0, 76]
[,, ,, 76]
[floatNum, 3.5, 76]
[), ), 76]
[;, ;, 76]
[id, f2, 77]
[=, =, 77]
[id, f2, 77]
[., ., 77]
[id, build, 77]
[(, (, 77]
[-, -, 77]
[floatNum, 2.0, 77]
[,, ,, 77]
[floatNum, 1.0, 77]
[,, ,, 77]
[floatNum, 0.0, 77]
[), ), 77]
[;, ;, 77]
[id, counter, 78]
[=, =, 78]
[floatNum, 1.0, 78]
[;, ;, 78]
[while, while, 80]
[(, (, 80]
[id, counter, 80]
[leq, <=, 80]
[floatNum, 10.0, 80]
[), ), 80]
[do, do, 81]
[write, write, 82]
[(, (, 82]
[id, counter, 82]
[), ), 82]
[;, ;, 82]
[write, write, 83]
[(, (, 83]
[id, f1, 83]
[., ., 83]
[id, evaluate, 83]
[(, (, 83]
[id, counter, 83]
[), ), 83]
[), ), 83]
[;, ;, 83]
[write, write, 84]
[(, (, 84]
[id, f2, 84]
[., ., 84]
[id, evaluate, 84]
[(, (, 84]
[id, counter, 84]
[), ), 84]
[), ), 84]
[;, ;, 84]
[end, end, 85]
[;, ;, 85]
[end, end, 86]
[$, $, 86]
